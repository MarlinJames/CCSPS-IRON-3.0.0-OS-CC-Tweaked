local Dir = "os/files/bitmaps"
--bitmap settings: screenx,screeny,mapwidth,mapheight,active
function createMap(Map,x,y,w,h)
local Path = fs.combine(Dir,Map..".bit")
local file = fs.open(Path,"w")
file.writeLine(textutils.serialize({x,y,w,h,true},{compact=true}))
for i = 1, h do
    file.writeLine(string.rep("x",w))
end
file.close()
end

local function ReadFile(id)
local file = fs.open(fs.combine(Dir,id..".bit"),"r")
local Lines = {}
local Line
repeat
    Line = file.readLine()
    if Line ~= nil then Lines[#Lines+1] = Line end
until Line == nil
file.close()
return Lines
end

function checkCollision(Map,x,y)
local Lines = ReadFile(Map)
if string.sub(Lines[y+1],x,x) ~= "x" then
    local Res = {}
    local settings = textutils.unserialize(Lines[1])
    local h = settings[4]
    for i = h+1, #Lines do
        local Det = textutils.unserialize(Lines[i])
        local X1, Y1 = settings[1]+Det[4],settings[2]+Det[5]
        local X2,Y2 = X1+(Det[6]-1), Y1+(Det[7]-1)
        if (x>= X1 and x <= X2) and (y >= Y1 and y <= Y2) then Res = {Det[1],Det[2],Det[3]} end
    end
    if Res[1] == nil then Res = false end
    return Res
end
end

function addObject(Map,id,type,path,x,y,w,h)
local Lines = ReadFile(Map)
local Symbol
if type == "button" then Symbol = "b" elseif type == "text" then Symbol = "t" elseif type == "image" then Symbol = "i" elseif type == "input" then Symbol = "s" end
for i = 1, h do
    Lines[y+i] = string.sub(Lines[y+i],1,x-1)..string.rep(Symbol,w)..string.sub(Lines[y+i],x+(w-1),string.len(Lines[y+i]))
end
Lines[#Lines+1] = textutils.serialize({id,type,path,x,y,w,h,true},{compact=true})
local file = fs.open(fs.combine(Dir,Map..".bit"),"w")
for i = 1, #Lines do
    file.writeLine(Lines[i])
end
file.close()
end

function clearMap(Map)
local file = fs.open(fs.combine(Dir,Map..".bit"),"r")
local Settings = textutils.unserialize(file.readLine())
file.close()
createMap(Map,Settings[1],Settings[2],Settings[3],Settings[4])
end

function boot()
local List = fs.list(Dir)
for i = 1, #List do
    fs.delete(fs.combine(Dir,List[i]))
end
end
