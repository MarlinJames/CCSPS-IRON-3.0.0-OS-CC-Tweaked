local function getWindowData(id)
local file = fs.open("os/files/windows.txt","r")
local Data = {}
local Line
local I = 0
repeat
    I = I + 1
    Line = file.readLine()
    local DT = textutils.unserialize(Line)
until DT[2] == id
Data = textutils.unserialize(Line)
file.close()
return Data
end

local function createWin(script,id,name,x,y,w,h)
local file = fs.open("os/files/windows.txt","a")
file.writeLine(textutils.serialize({script,id,name,x,y,w,h,{true,false,true}},{compact=true}))
file.close()
end

local function deleteWin(id)
local file = fs.open("os/files/windows.txt","r")

local Line
local Lines = {}
repeat
    Line = file.readLine()
    if Line ~= nil then local Data = textutils.unserialize(Line) if Data[2] == id then else Lines[#Lines+1] = Line end end
until Line == nil
file.close()
file = fs.open("os/files/windows.txt","w")
for i = 1, #Lines do
    file.writeLine(Lines[i])
end
file.close()
bitmap.deleteMap("windows_"..id)
RedrawWindows()
end

function createWindow(script)
local Name, settings = ProgramReader.Execute(script,"call","onCreation")
local ID = math.ran(1,1000)
local Win = "window_"..ID
createWin(script,ID,Name,1,1,20,20)
bitmap.createMap(Win,1,1,20,20)
bitmap.addObject(Win,"win_close","button","exit",20,1,1,1)
end

function RedrawWindows()
Graphics.cleanLayer(3)
local file = fs.open("os/files/windows.txt","r")
local data = {}
local Line
repeat
    Line = file.readLine()
    if Line ~= nil then data = textutils.unserialize(Line) Graphics.drawBox(data[4],data[5]+1,data[6],data[7]-1,3,"0") Graphics.drawLine(data[4],data[5],data[6]-3,0,3,"7") Graphics.editPixel(data[4]+data[6]-1,data[5],3,"e") Graphics.editText(data[4],data[5],3,data[3],"win_title") end
until Line == nil

file.close()
Graphics.UpdateScreen()
end

function checkWindow(x,y,event)
local List = fs.list("os/files/bitmaps")
local Found = false
for i = 1, #List do
    if Found == false and string.find(List[i],"window_") ~= nil then
        local Details = getWindowData(string.sub(List[i],8,string.len(List[i])-3))
        local button = bitmap.checkCollision(string.sub(List[i],1,string.len(List[i])-4))
        if button[1] == "win_close" then Found = true deleteWin(Details[2]) end
    end
end
end
