local SystemDi = textutils.unserialize(settings.get("system.dimensions"))

local w, h = SystemDi[1], SystemDi[2]

local function CombineLayers_D()
local Doc = fs.open("os/files/Display_M.nfp","w")
local LINES = {}
for i = 1, #fs.list("os/files/layers") do
    local file = fs.open("os/files/layers/Display_L"..i..".nfp","r")
    local Line
    for y = 1, h*2 do
        Line = file.readLine()
        local STR =""
        for x = 1, w do
            print(x,y,i)
            term.scroll(1)
            if Line == nil then STR = STR.." " elseif string.sub(Line,x,x) ~= "%s" then STR = STR..string.sub(Line,x,x) else STR = STR..string.sub(LINES[y],x,x) end
        end
        LINES[y] = STR
    end
    file.close()
end
for i = 1, #LINES do
    Doc.writeLine(LINES[i])
end
Doc.close()
end

local function CombineLayers_T()
local Doc = fs.open("os/files/Display_textM.txt","w")
local LINES = {}
for i = 1, #fs.list("os/files/textLayers") do
    local file = fs.open("os/files/textLayers/Display_T"..i..".txt","r")
    local layer = -1
    local UT = false
    if fs.exists("os/files/layers/Display_L"..(i+1)..".nfp") then layer = fs.open("os/files/layers/Display_L"..(i+1)..".nfp","r") UT = true else UT = false end
    local Line
    for y = 1, h do
        Line = file.readLine()
        local STR =""
        local LC
        if UT == true then LC = layer.readLine() end
        for x = 1, w do
            if UT == true and string.sub(LC,x,x) ~= " " then STR=STR.." " else if string.sub(Line,x,x) ~= " " then STR = STR..string.sub(Line,x,x) else STR = STR..string.sub(LINES[y],x,x) end end
        end
        LINES[y] = STR
    end
    if UT == true then layer.close() end
    file.close()
end
for i = 1, #LINES do
    Doc.writeLine(LINES[i])
end
Doc.close()
end

local function getReadableTextColor(K)
local C
local CL = {{"0",colors.black},{"1",colors.white},{"2",colors.white},{"3",colors.white},{"4",colors.red},{"5",colors.black},{"6",colors.white},{"7",colors.white},{"8",colors.white},{"9",colors.white},{"a",colors.white},{"b",colors.white},{"c",colors.white},{"d",colors.white},{"e",colors.yellow},{"f",colors.white}}
for i = 1, #CL do
    if K == CL[i][1] then C = CL[i][2] end
end
if C == nil then C = colors.black end
return C
end

local function GetColor(K)
local C
local CL = {{"0",colors.white},{"1",colors.orange},{"2",colors.magenta},{"3",colors.lightBlue},{"4",colors.yellow},{"5",colors.lime},{"6",colors.pink},{"7",colors.gray},{"8",colors.lightGray},{"9",colors.cyan},{"a",colors.purple},{"b",colors.blue},{"c",colors.brown},{"d",colors.green},{"e",colors.red},{"f",colors.black}}
for i = 1, #CL do
    if K == CL[i][1] then C = CL[i][2] end
end
if C == nil then C = colors.black end
return C
end

function DrawScreen()

end

function UpdateScreen()
CombineLayers_D()
--gave other one job of combining text as well.
local x = 1
local y = 1
local tByte = fs.getSize("os/files/Display_M.nfp")
local byte = 1
local file = fs.open("os/files/Display_M.nfp","r")
local Line = file.readLine()
local Text 
local Color = colors.black
local Char = " "
local SavedC = {}
repeat
    Color = GetColor(string.sub(tostring(Line),x,x))
    term.setCursorPos(x,y)
    term.setBackgroundColor(Color)
    term.setTextColor(Color)
    SavedC[y][x] = string.sub(Line,x,x)
    if y==h and x==w then y = h+1 elseif x == w then x = 1 y = y + 1 Line = file.readLine() else x = x + 1 end
until y == h+1
x, y = 1, 1
repeat
    term.setCursorPos(x,y)
    if Line == nil then else term.blitz(string.sub(Line,x,x),getReadableTextColor(SavedC[y][x]),SavedC[y][x]) end
    if y==h and x==w then y = h+1 elseif x == w then x = 1 y = y + 1 Line = file.readLine() else x = x + 1 end
until y == h+1
file.close()
end

function editPixel(x,y,l,color)
local Path = ("os/files/layers/Display_L"..l..".nfp")
local R = fs.open(Path,"r")
local line
local LINES = {}
repeat
    line = R.readLine()
    if line ~= nil then LINES[#LINES + 1] = line end
until line == nil
R.close()
local W = fs.open(Path,"w")
LINES[y] = string.sub(LINES[y],1,x-1)..color..string.sub(LINES[y],x+1,string.len(LINES[y]))
for i = 1, #LINES do
    W.writeLine(LINES[i])
end
W.close()
end

function addText(x,y,l,t)
t = string.sub(t,2,string.len(t)-1)
local Path = ("os/files/layers/Display_L"..l..".nfp")
local R = fs.open(Path,"r")
local line
local LINES = {}
repeat
    line = R.readLine()
    if line ~= nil then LINES[#LINES + 1] = line end
until line == nil
R.close()
local W = fs.open(Path,"w")
LINES[y+h] = string.sub(LINES[y],1,x-1)..t..string.sub(LINES[y],x+string.len(t),string.len(LINES[y]))
for i = 1, #LINES do
    W.writeLine(LINES[i])
end
W.close()
end

function fillColor(l,old,new)

end

function drawLine(x,y,le,dir,l,c)
local Path = ("os/files/layers/Display_L"..l..".nfp")
local R = fs.open(Path,"r")
local line
local LINES = {}
repeat
    line = R.readLine()
    if line ~= nil then LINES[#LINES + 1] = line end
until line == nil
R.close()
local W = fs.open(Path,"w")
for i = 1, le do
    LINES[y] = string.sub(LINES[y],1,x-1)..c..string.sub(LINES[y],x+1,string.len(LINES[y]))
    if dir == 0 then--horizontal
        x = x + 1
    elseif dir == 1 then--vertical
        y = y + 1
    end
end
for i = 1, #LINES do
    W.writeLine(LINES[i])
end
W.close()
end

function drawBox(x,y,W,H,l,c)
local X, Y = x, y
local Path = ("os/files/layers/Display_L"..l..".nfp")
local R = fs.open(Path,"r")
local line
local LINES = {}
repeat
    line = R.readLine()
    if line ~= nil then LINES[#LINES + 1] = line end
until line == nil
R.close()
local Doc = fs.open(Path,"w")
for i = 1, W*H do
    LINES[y] = string.sub(LINES[y],1,x-1)..c..string.sub(LINES[y],x+1,string.len(LINES[y]))
    if x == X+(W-1) then y = y + 1 x = X else x = x + 1 end
end
for i = 1, #LINES do
    Doc.writeLine(LINES[i])
end
Doc.close()
end

function createLayer(l,fill)--will create new layer file full of spaces
local file
local path = ("os/files/layers/Display_L"..l..".nfp")
file = fs.open(path,"w")

for i = 1, h do
    if fill ~= nil then file.writeLine(string.rep(fill,w)) else file.writeLine(string.rep(" ",w)) end
end
for i = 1, h do
    file.writeLine(string.rep(" ",w))
end
file.close()
end

function clearLayer(l,type)--will create new layer file full of spaces
local path
local file
if type == "text" then path = ("os/files/textLayers/Display_T"..l..".txt") elseif type == "color" then path = ("os/files/layers/Display_L"..l..".nfp") end
file = fs.open(path,"w")

for i = 1, h do
    file.writeLine(string.rep(" ",w))
end
file.close()
end

function boot()
for i = 1, #fs.list("os/files/layers") do
    local T = ("os/files/layers/Display_L"..i..".nfp")
    if fs.exists(T) then fs.delete(T) end
end
createLayer(1,"f")
fs.delete("os/files/Display_M.nfp")
fs.delete("os/files/Display_textM.txt")
end
